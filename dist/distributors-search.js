(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var _a, _b, _c, _d;

exports.__esModule = true; //delete all empty <p>s

var ps = document.getElementsByTagName("p");
Array.from(ps).forEach(function (p) {
  if (p.innerText.replace(/[^\w\s]/gi, '') !== "") {
    return;
  }

  if (p.parentNode) {
    p.parentNode.removeChild(p);
  }
});
var dropdownBTNs = document.getElementsByClassName("dropdown-btn");
var dropdownContents = document.getElementsByClassName("vendor-list-container");
Array.from(dropdownBTNs).forEach(function (dropdownBTN) {
  dropdownBTN.addEventListener("click", function (event) {
    return onClick(event);
  });
});
Array.from(dropdownContents).forEach(function (dropdownContent) {
  dropdownContent.addEventListener("focusout", function (event) {
    return onFocusout(event);
  });
});

function onClick(event) {
  if (!event.target) {
    console.error('onClick: event target is missing');
    return;
  }

  var parent = event.target.parentElement;

  if ((parent === null || parent === void 0 ? void 0 : parent.getAttribute("disabled")) === "true") {
    return;
  }

  var vendorListContainer = parent === null || parent === void 0 ? void 0 : parent.getElementsByClassName("vendor-list-container")[0];

  if (!vendorListContainer) {
    return;
  }

  vendorListContainer.classList.add("visible");
  vendorListContainer.focus();
}

function onFocusout(event) {
  var target = event.target;

  if (!target) {
    console.error('onFocusout: event target is missing');
    return;
  }

  var parent = target.parentElement;

  if (!parent) {
    console.error('onFocusout: parent is missing');
    return;
  }

  parent.getElementsByClassName("vendor-list-container")[0].classList.remove("visible");
}

function setEntries(dropdown, newEntries) {
  var dropdownContent = dropdown.getElementsByClassName("vendor-list-container")[0];
  var entries = dropdownContent.getElementsByClassName("vendor-list-item");

  while (entries.length < newEntries.length) {
    var dup = entries[0].cloneNode(false);
    dropdownContent.appendChild(dup);
    entries = dropdownContent.getElementsByClassName("vendor-list-item");
  }

  while (entries.length > newEntries.length) {
    entries[0].remove();
    entries = dropdownContent.getElementsByClassName("vendor-list-item");
  }

  var _loop_1 = function _loop_1(i) {
    var element = entries[i];
    element.innerText = newEntries[i];

    if (element.listener) {
      entries[i].removeEventListener("click", element.listener);
    }

    element.listener = function (event) {
      return onSelect(event, newEntries[i]);
    };

    entries[i].addEventListener("click", element.listener);
  };

  for (var i = 0; i < entries.length; i++) {
    _loop_1(i);
  }
}

function setValue(dropdown, value) {
  dropdown.setAttribute("value", value);
  dropdown.getElementsByClassName("btn-text")[0].innerText = value;
  dropdown.getElementsByClassName("vendor-list-container")[0].classList.remove("visible");
}

function setDisabled(dropdown, value) {
  var btn = dropdown.getElementsByClassName("dropdown-btn")[0];

  if (value) {
    btn.classList.add("disabled");
  } else {
    btn.classList.remove("disabled");
  }

  dropdown.setAttribute("disabled", String(value));
}

function onSelect(event, value) {
  var _a;

  var target = event.target;

  if (!target) {
    console.error('onSelect: target is missing');
    return;
  }

  var parent = (_a = target.parentNode) === null || _a === void 0 ? void 0 : _a.parentNode;

  if (!parent) {
    console.error('onSelect: parent is missing');
    return;
  }

  setValue(parent, value);
  parent.onchange();
}

var vendors = [];
var markets = [];
var countries = [];
var regions = [];
var vendorContainers = document.getElementsByClassName('vendor-content-container');
Array.from(vendorContainers).forEach(function (vendorContainer) {
  var market = vendorContainer.getElementsByClassName("content-field-market")[0];
  var country = vendorContainer.getElementsByClassName("content-field-country")[0];
  var region = vendorContainer.getElementsByClassName("content-field-region")[0];

  if (region.innerText !== "") {
    vendorContainer.getElementsByClassName("region-header")[0].innerText = region.innerText;
    vendorContainer.classList.add("mix");
    vendorContainer.classList.add(market.innerText);
    vendorContainer.classList.add(country.innerText);
    vendorContainer.classList.add(region.innerText);
  }

  vendors.push({
    market: market.innerText,
    country: country.innerText,
    region: region.innerText
  });
  market.style.display = 'none';
  country.style.display = 'none';
  region.style.display = 'none';
});

for (var _i = 0, vendors_1 = vendors; _i < vendors_1.length; _i++) {
  var vendor = vendors_1[_i];

  if (!countries.includes(vendor.country)) {
    countries.push(vendor.country);
  }
}

var vendorContents = document.getElementsByClassName('vendor-content');
Array.from(vendorContents).forEach(function (vendorContent) {
  if (vendorContent.innerText === "") {
    if (!vendorContent.parentElement) {
      console.error('anonymous: vendorContent parent is missing');
      return;
    }

    vendorContent.parentElement.style.display = 'none';
  }
});
var vendorCategoryContainers = document.getElementsByClassName('vendor-category-container');
vendorCategoryContainers[0].classList.add("mix");
var vendorCategoryContainersParent = vendorCategoryContainers[0].parentElement;

while (vendorCategoryContainers.length < countries.length) {
  if (!vendorCategoryContainersParent) {
    console.error('distributor-search: vendorCategoryContainers parent is missing');
    break;
  }

  vendorCategoryContainersParent.appendChild(vendorCategoryContainers[0].cloneNode(true));
  vendorCategoryContainers = document.getElementsByClassName('vendor-category-container');
}

for (var i = 0; i < countries.length; i++) {
  vendorCategoryContainers[i].getElementsByClassName('category-name-container')[0].innerText = countries[i];
}

var tempContainer = document.getElementById('temp');

if (!tempContainer) {
  throw new Error('distributor-search: vendorCategoryContainers parent is missing');
}

vendorContainers = tempContainer.getElementsByClassName('vendor-content-container');
var lastSize = vendorContainers.length;

while (vendorContainers.length > 0) {
  var element = (_a = vendorContainers[0].parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(vendorContainers[0]);

  if (!element) {
    throw new Error('distributor-search: vendorContainer parent is missing');
  }

  var market = element.getElementsByClassName("content-field-market")[0].innerText.replace(/ /g, '').replace(/&/g, '-');
  var country = element.getElementsByClassName("content-field-country")[0].innerText.replace(/ /g, '').replace(/&/g, '-');
  var region = element.getElementsByClassName("content-field-region")[0].innerText.replace(/ /g, '').replace(/&/g, '-');

  for (var i = 0; i < vendorCategoryContainers.length; i++) {
    var header = vendorCategoryContainers[i].getElementsByClassName("category-name-container")[0].innerText.replace(/ /g, '').replace(/&/g, '-');

    if (country.toUpperCase() === header.toUpperCase()) {
      vendorCategoryContainers[i].append(element);

      if (market !== "") {
        vendorCategoryContainers[i].classList.add(market);
      }

      if (country !== "") {
        vendorCategoryContainers[i].classList.add(country);
      }

      if (region !== "") {
        vendorCategoryContainers[i].classList.add(region);
      }

      break;
    }
  }

  vendorContainers = tempContainer.getElementsByClassName('vendor-content-container');

  if (lastSize == vendorContainers.length) {
    throw new Error('distributor-search: failed to remove vendor from tempory container');
  }

  lastSize = vendorContainers.length;
}

var marketSelect = document.getElementById('marketSelect');
var countrySelect = document.getElementById('countrySelect');
var regionSelect = document.getElementById('regionSelect');

if (!marketSelect || !countrySelect || !regionSelect) {
  throw new Error('distributor-search: failed to find selection inputs');
}

var marketSelectDefault = (_b = document.getElementById('marketSelectDefault')) === null || _b === void 0 ? void 0 : _b.innerText;
var countrySelectDefault = (_c = document.getElementById('countrySelectDefault')) === null || _c === void 0 ? void 0 : _c.innerText;
var regionSelectDefault = (_d = document.getElementById('regionSelectDefault')) === null || _d === void 0 ? void 0 : _d.innerText;

if (!marketSelectDefault || !countrySelectDefault || !regionSelectDefault) {
  throw new Error('distributor-search: failed to find default values');
}

setDisabled(marketSelect, false);
setDisabled(countrySelect, true);
setDisabled(regionSelect, true);

for (var _e = 0, vendors_2 = vendors; _e < vendors_2.length; _e++) {
  var vendor = vendors_2[_e];

  if (!markets.includes(vendor.market)) {
    markets.push(vendor.market);
  }
}

setEntries(marketSelect, markets);

marketSelect.onchange = function () {
  var market = marketSelect.getAttribute("value");
  countries = [];

  for (var _i = 0, vendors_3 = vendors; _i < vendors_3.length; _i++) {
    var vendor = vendors_3[_i];

    if (vendor.market == market && !countries.includes(vendor.country)) {
      countries.push(vendor.country);
    }
  }

  setEntries(countrySelect, countries);
  setValue(countrySelect, countrySelectDefault);
  setValue(regionSelect, regionSelectDefault);
  setDisabled(countrySelect, false);
  setDisabled(regionSelect, true);
  Array.from($('.vendor-category-container')).forEach(function (element) {
    element.classList.remove('toggled');
  });
  var collection = $('.vendor-content-container, .vendor-category-container.' + market);
  mixer.filter(collection);
};

countrySelect.onchange = function () {
  var country = countrySelect.getAttribute("value");

  if (!country) {
    console.error('countrySelect.onchange: countrySelect has no value');
    return;
  }

  regions = [];

  for (var _i = 0, vendors_4 = vendors; _i < vendors_4.length; _i++) {
    var vendor = vendors_4[_i];

    if (vendor.country == country && !regions.includes(vendor.region)) {
      regions.push(vendor.region);
    }
  }

  if (regions.length == 1 && regions[0] === "") {
    setValue(regionSelect, regionSelectDefault);
    setDisabled(regionSelect, true);
  } else {
    setEntries(regionSelect, regions);
    setValue(regionSelect, regionSelectDefault);
    setDisabled(regionSelect, false);
  }

  Array.from($('.vendor-category-container')).forEach(function (element) {
    element.classList.remove('toggled');
  });
  var search = country.replace(/ /g, '').replace(/&/g, '-');
  var collection = $('.vendor-content-container, .vendor-category-container.' + search);
  mixer.filter(collection);
  Array.from($('.vendor-category-container.' + search)).forEach(function (element) {
    element.classList.add('toggled');
  });
};

regionSelect.onchange = function () {
  var region = regionSelect.getAttribute("value");
  Array.from($('.vendor-category-container')).forEach(function (element) {
    element.classList.remove('toggled');
  });
  var collection = $('.vendor-content-container.' + region + ', .vendor-category-container.' + region);
  Array.from($('.vendor-category-container.' + region)).forEach(function (element) {
    element.classList.add('toggled');
  });
  mixer.filter(collection);
};

var container = document.getElementById('vendor-list');

if (!container) {
  throw new Error('distributor-search: vendor list not found');
}

var mixer = mixitup(container, {
  animation: {
    duration: 350
  }
});

function onToggle(event) {
  if (!event.target) {
    console.error('onToggle: event target is missing');
    return;
  }

  var element = event.target;

  if (!element.toggled) {
    element.toggled = true;
    element.parentElement.classList.add("toggled");
    return;
  }

  element.toggled = false;
  element.parentElement.classList.remove("toggled");
}

var vendorCategories = document.getElementsByClassName('vendor-category');
Array.from(vendorCategories).forEach(function (vendorCategory) {
  vendorCategory.addEventListener("click", onToggle);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}]},{},[1])